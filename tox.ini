[tox]
envlist = py27,py33,py34,py35,py36,docs,jsdoc,screenshots,integration,acceptance27,acceptance36,docker

[testenv]
deps =
  -r{toxinidir}/requirements.txt
  cov-core
  coverage
  execnet
  pep8
  py
  pytest>=2.8.3
  pytest-cache
  pytest-cov
  pytest-pep8
  pytest-flakes
  mock
  freezegun
  pytest-blockage
  pytest-timeout

passenv=CI TRAVIS* CONTINUOUS_INTEGRATION AWS* NO_REFRESH_DB DB_CONNSTRING NO_CLASS_REFRESH_DB
setenv =
    TOXINIDIR={toxinidir}
    TOXDISTDIR={distdir}
    SETTINGS_MODULE=biweeklybudget.tests.fixtures.test_settings
    CI=true
sitepackages = False
whitelist_externals = env test

commands =
    python --version
    virtualenv --version
    pip --version
    pip freeze
    py.test -rxs -vv --durations=10 --pep8 --flakes --blockage -m "not integration and not acceptance" --cov-report term-missing --cov-report xml --cov-report html --cov-config {toxinidir}/.coveragerc --cov=biweeklybudget {posargs} biweeklybudget

# always recreate the venv
recreate = True

[testenv:docs]
passenv=CI TRAVIS* CONTINUOUS_INTEGRATION
setenv =
    TOXINIDIR={toxinidir}
    TOXDISTDIR={distdir}
    CI=true
deps =
  -r{toxinidir}/requirements.txt
  docutils
  pygments
  sphinx
  sphinx_rtd_theme
basepython = python3.6
commands =
    python --version
    virtualenv --version
    pip --version
    pip freeze
    rst2html.py --halt=2 README.rst /dev/null
    sphinx-apidoc biweeklybudget biweeklybudget/tests biweeklybudget/alembic -o {toxinidir}/docs/source -e -f -M
    # link check
    # -n runs in nit-picky mode
    # -W turns warnings into errors
    sphinx-build -a -n -W -b linkcheck {toxinidir}/docs/source {toxinidir}/docs/build/html
    # build
    sphinx-build -a -n -W -b html {toxinidir}/docs/source {toxinidir}/docs/build/html

[testenv:jsdoc]
# generate sphinx-js javascript documentation
passenv = {[testenv:docs]passenv}
setenv = {[testenv:docs]setenv}
deps =
  -r{toxinidir}/requirements.txt
  docutils
  pygments
  sphinx
  sphinx_rtd_theme
  sphinx-js==1.5.2
basepython = python3.6
commands =
    python --version
    virtualenv --version
    pip --version
    pip freeze
    python {toxinidir}/docs/make_jsdoc.py {toxinidir}

[testenv:screenshots]
# generate screenshots for documentation
deps =
  -r{toxinidir}/requirements.txt
  pytest-flask
  Pillow==4.1.1
passenv = {[testenv]passenv}
setenv = {[testenv]setenv}
basepython = python3.6
sitepackages = False
whitelist_externals = env test
commands =
    python --version
    virtualenv --version
    pip --version
    pip freeze
    python {toxinidir}/docs/make_screenshots.py {toxinidir}

[testenv:docker]
# generate screenshots for documentation
deps =
  -r{toxinidir}/requirements.txt
  docker==2.2.1
passenv = {[testenv]passenv} DOCKER_TEST_TAG
setenv = {[testenv]setenv}
basepython = python3.6
sitepackages = False
whitelist_externals = env test
commands =
    python --version
    virtualenv --version
    pip --version
    pip freeze
    python {toxinidir}/biweeklybudget/tests/docker_build.py {toxinidir} {distdir}

[testenv:integration]
deps =
  -r{toxinidir}/requirements.txt
  execnet
  py
  pytest>=2.8.3
  pytest-cache
  mock
  freezegun
passenv = {[testenv]passenv}
setenv = {[testenv]setenv}
basepython = python3.6
sitepackages = False
whitelist_externals = env test
commands =
    python --version
    virtualenv --version
    pip --version
    pip freeze
    py.test -rxs -vv --durations=10 -m "integration" biweeklybudget

[testenv:acceptance27]
deps =
  -r{toxinidir}/requirements.txt
  cov-core
  coverage
  execnet
  py
  pytest>=2.8.3
  pytest-cache
  pytest-cov
  mock
  freezegun
  pytest-flask
  pytest-selenium
  pytest-timeout
passenv = {[testenv]passenv}
setenv = {[testenv]setenv}
basepython = python2.7
sitepackages = False
whitelist_externals = env test
commands =
    python --version
    virtualenv --version
    pip --version
    pip freeze
    py.test -rxs -vv --durations=10 --driver PhantomJS --html=results/acceptance.html -m "acceptance" biweeklybudget

[testenv:acceptance36]
deps = {[testenv:acceptance27]deps}
passenv = {[testenv]passenv}
setenv = {[testenv]setenv}
basepython = python3.6
sitepackages = False
whitelist_externals = env test
commands = {[testenv:acceptance27]commands}
